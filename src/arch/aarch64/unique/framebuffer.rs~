const FRAMEBUFFER_WIDTH: u32 = 800;
const FRAMEBUFFER_HEIGHT: u32 = 600;
const FRAMEBUFFER_DEPTH: u32 = 24;

#[repr(u32)]
enum PropertyTag {
    Null = 0,
    FbAllocateBuffer = 0x00040001,
    FbReleaseBuffer = 0x00048001,
    FbGetPhysicalDimensions = 0x00040003,
    FbSetPhysicalDimensions = 0x00048003,
    FbGetVirtualDimensions = 0x00040004,
    FbSetVirtualDimensions = 0x00048004,
    FbGetBitsPerPixel = 0x00040005,
    FbSetBitsPerPixel = 0x00048005,
    FbGetBytesPerRow = 0x00040008
}

#[derive(Copy, Clone)]
#[repr(C)]
struct FramebufferLocation {
    address: usize,
    size: u32
}

#[derive(Copy, Clone)]
#[repr(C)]
struct ScreenSize {
    width: u32,
    height: u32
}

union ValueBuffer {
    uint32: u32,
    framebuffer_location: FramebufferLocation,
    screen_size: ScreenSize
}

struct PropertyMessageTag {
    tag: PropertyTag,
    value_buffer: ValueBuffer
}

impl PropertyMessageTag {
    const fn value_buffer_len(&self) -> u32 {
	use PropertyTag::*;
	match self.tag {
	    FbAllocateBuffer
		| FbGetPhysicalDimensions
		| FbSetPhysicalDimensions
		| FbGetVirtualDimensions
		| FbSetVirtualDimensions
		=> { 8 },
	    FbGetBitsPerPixel
		| FbSetBitsPerPixel
		| FbGetBytesPerRow
		=> { 4 },
	    FbReleaseBuffer
		=> { 0 },
	    Null
		=> { 0 }
	}
    }
}

pub fn send_messages() {
    use super::mailbox::*;

    
}

pub fn initialize() {
    let property_message = {
	use PropertyTag::*;
	[
	    PropertyMessageTag {
		tag: FbSetPhysicalDimensions,
		value_buffer: ValueBuffer {
		    screen_size: ScreenSize { x: FRAMEBUFFER_WIDTH, y: FRAMEBUFFER_HEIGHT }
		}
	    },
	    PropertyMessageTag {
		tag: FbSetVirtualDimensions,
		value_buffer: ValueBuffer {
		    screen_size: ScreenSize { x: FRAMEBUFFER_WIDTH, y: FRAMEBUFFER_HEIGHT }
		}
	    },
	    PropertyMessageTag {
		tag: FbSetBitsPerPixel,
		value_buffer: ValueBuffer {
		    uint32: FRAMEBUFFER_DEPTH
		}
	    }
	    PropertyMessageTag {
		tag: Null,
		value_buffer: {
		    uint32: 0
		}
	    }
	]
    };
}

